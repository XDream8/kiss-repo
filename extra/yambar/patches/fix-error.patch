From e1fc3a0e29b608110f0965a19f35d85fb3df03e6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Daniel=20Ekl=C3=B6f?= <daniel@ekloef.se>
Date: Fri, 14 Jul 2023 12:52:19 +0200
Subject: [PATCH] =?UTF-8?q?tag:=20explicitly=20initialize=20=E2=80=98fmt?=
 =?UTF-8?q?=E2=80=99?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes the following compiler warning/error:

  In file included from /usr/include/stdio.h:906,
                   from ../tag.c:6:
  In function ‘snprintf’,
      inlined from ‘tags_expand_template’ at ../tag.c:708:13:
  /usr/include/bits/stdio2.h:54:10: error: ‘fmt’ may be used uninitialized [-Werror=maybe-uninitialized]
     54 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
        |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     55 |                                    __glibc_objsize (__s), __fmt,
        |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     56 |                                    __va_arg_pack ());
        |                                    ~~~~~~~~~~~~~~~~~
  ../tag.c: In function ‘tags_expand_template’:
  ../tag.c:677:25: note: ‘fmt’ was declared here
    677 |             const char *fmt;
        |                         ^~~
  cc1: all warnings being treated as errors

Closes #311
---
 tag.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/tag.c b/tag.c
index b098eb7..0f44d7e 100644
--- a/tag.c
+++ b/tag.c
@@ -674,7 +674,7 @@ tags_expand_template(const char *template, const struct tag_set *tags)
             const long max = tag->max(tag);
             long value = kind == VALUE_MIN ? min : max;
 
-            const char *fmt;
+            const char *fmt = NULL;
             switch (format) {
             case FMT_DEFAULT: fmt = zero_pad ? "%0*ld" : "%*ld"; break;
             case FMT_HEX:     fmt = zero_pad ? "%0*lx" : "%*lx"; break;
@@ -704,6 +704,8 @@ tags_expand_template(const char *template, const struct tag_set *tags)
             }
             }
 
+            assert(fmt != NULL);
+
             char str[24];
             snprintf(str, sizeof(str), fmt, digits, value);
             sbuf_append(&formatted, str);
